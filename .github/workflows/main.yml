name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  EKS_CLUSTER: vprofile-eks


jobs:
 Testing:
  runs-on: ubuntu-latest
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Maven test
      run: mvn test

    - name: Checkstyle
      run: mvn checkstyle:checkstyle

    - name: Set jave
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'


    - name: Setup sonarqube
      uses: warchant/setup-sonar-scanner@v7


    - name: SonarQube scan
      run: sonar-scanner
         -Dsonar.host.url=${{secrets.SONAR_URL}}
         -Dsonar.login=${{secrets.SONAR_TOKEN}}
         -Dsonar.projectKey=${{secrets.SONAR_PROJECT_KEY}}
         -Dsonar.organization=${{secrets.SONAR_ORGANIZATION}}
         -Dsonar.sources=src/
         -Dsonar.junit.reportPath=target/surefire-reports/
         -Dsonar.jacoco.reportPath=target/jacoco.exec
         -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
         -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/



 BUILD_AND_PUBLISH:
  runs-on: ubuntu-latest
  needs: Testing
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and uplod image to ECR
      uses: appleboy/docker-ecr-action@master
      with:
        access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ env.AWS_REGION }}
        repo: ${{ env.ECR_REPOSITORY }}
        registry: ${{ secrets.REGISTRY }}
        tags: latest,${{github.run_number}}
        daemon_off: false
        dockerfile: Dockerfile
        context: ./

   


 DeploytoEKS:
  needs: BUILD_AND_PUBLISH
  runs-on: ubuntu-latest
  steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}


    - name: Get kubeconfig
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

    - name: Print config file
      run: |
        cat ~/.kube/config

    - name: Login to ECR
      run: |
        kubectl create secret docker-registry ecr-registry \
          --docker-server=${{ secrets.REGISTRY }} \
          --docker-username=AWS \
          --docker-password=$(aws ecr get-login-password) \
          

    - name: Deploy Helm chart
      uses: bitovi/github-actions-eks-helm@v1.2.8
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        cluster-name: ${{ env.EKS_CLUSTER }}
        chart-path: helm/vprofilecharts
        namespace: default
        values: appimage=${{ secrets.REGISTRY }}/${{ env.ECR_REPOSITORY }},apptag=${{ github.run_number }}
        name: vprofil-stack
       